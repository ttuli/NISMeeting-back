// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: meeting.proto

package server

import (
	"context"

	"Meeting/apps/meeting/rpc/internal/logic"
	"Meeting/apps/meeting/rpc/internal/svc"
	"Meeting/apps/meeting/rpc/meeting"
)

type MeetingServer struct {
	svcCtx *svc.ServiceContext
	meeting.UnimplementedMeetingServer
}

func NewMeetingServer(svcCtx *svc.ServiceContext) *MeetingServer {
	return &MeetingServer{
		svcCtx: svcCtx,
	}
}

func (s *MeetingServer) CreateMeeting(ctx context.Context, in *meeting.CreateMeetingReq) (*meeting.CreateMeetingResp, error) {
	l := logic.NewCreateMeetingLogic(ctx, s.svcCtx)
	return l.CreateMeeting(in)
}

func (s *MeetingServer) JoinMeeting(ctx context.Context, in *meeting.JoinMeetingReq) (*meeting.JoinMeetingResp, error) {
	l := logic.NewJoinMeetingLogic(ctx, s.svcCtx)
	return l.JoinMeeting(in)
}

func (s *MeetingServer) HistoryMeeting(ctx context.Context, in *meeting.HistoryMeetingReq) (*meeting.HistoryMeetingResp, error) {
	l := logic.NewHistoryMeetingLogic(ctx, s.svcCtx)
	return l.HistoryMeeting(in)
}
